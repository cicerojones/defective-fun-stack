0:00:00.300,0:00:03.180
Most of the times, having data[br]in our database is a good idea.

0:00:03.180,0:00:06.812
But sometimes, we make a few bad ideas[br]that we may want to delete, later.

0:00:06.812,0:00:10.320
Auntie Anne's Diner just realized, that[br]their spinach ice cream wasn't a hit,

0:00:10.320,0:00:11.920
and wants to remove it from their menu.

0:00:11.920,0:00:15.665
Deleting an item is a three step[br]process similar to updating.

0:00:15.665,0:00:19.105
First, we want to execute the query[br]to find the spinach ice cream, and

0:00:19.105,0:00:20.415
store it in a variable.

0:00:20.415,0:00:22.815
Then we want to call session[br]delete on that item.

0:00:22.815,0:00:24.745
And finally, we'll commit the session.

0:00:24.745,0:00:27.595
Let's go back to the Python shell,[br]and walk through this together.

0:00:27.595,0:00:31.015
Let's assume, Auntie Anne's was the only[br]restaurant with spinach ice cream, and

0:00:31.015,0:00:34.273
use the .dot one function,[br]to grab this entry in the database.

0:00:34.273,0:00:35.015
To double check,

0:00:35.015,0:00:38.060
I will print out the name of the[br]restaurant, this menu item belongs to.

0:00:38.060,0:00:40.600
And see that it is indeed,[br]Auntie Ann's creation.

0:00:40.600,0:00:43.030
We will call session.delete[br]to stage this item for

0:00:43.030,0:00:47.750
removal from the database, and then call[br]session.commit to persist this change.

0:00:47.750,0:00:51.560
If we search for spinach now,[br]the sqlalchemy gives us, a no row was

0:00:51.560,0:00:54.980
found error, letting us know that this[br]data is no longer in our database.
