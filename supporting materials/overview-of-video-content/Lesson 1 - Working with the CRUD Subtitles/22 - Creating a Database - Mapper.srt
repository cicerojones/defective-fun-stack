0:00:00.140,0:00:03.360
Our mapper code creates variables that[br]we will use to create columns within

0:00:03.360,0:00:04.150
our database.

0:00:04.150,0:00:07.610
When we create a column, we must also[br]pass an attribute to that column.

0:00:07.610,0:00:10.420
Here are some column attributes that[br]we will be using in the activities in

0:00:10.420,0:00:11.470
lesson one.

0:00:11.470,0:00:14.920
We can specify a string, with[br]a specified maximum string length and

0:00:14.920,0:00:18.430
we can specify integers which are handy[br]for storing whole number values.

0:00:18.430,0:00:21.340
Relationships tell SQLAlchemy[br]the type of relationship one

0:00:21.340,0:00:22.870
table has to another.

0:00:22.870,0:00:25.850
Nullable is an attribute that[br]if set to false indicates that

0:00:25.850,0:00:29.400
a column entry must have a value in[br]order for the row to be created.

0:00:29.400,0:00:32.409
Setting primary key to true[br]indicates a value that we can use to

0:00:32.409,0:00:35.340
uniquely identify each row[br]of our database table.

0:00:35.340,0:00:38.780
And foreign key we can use to reference[br]a row in a different table provided that

0:00:38.780,0:00:40.810
a relation exists[br]between the two of them.

0:00:40.810,0:00:44.390
Inside each restaurant class, for now[br]we're just going to specify a name and

0:00:44.390,0:00:46.240
an ID number to reference[br]each restaurant.

0:00:46.240,0:00:49.330
We create a variable and[br]name it name, specify it as a column,

0:00:49.330,0:00:53.400
say that this column has a string with[br]a maximum length of 80 characters, and

0:00:53.400,0:00:55.050
set nullable equal to false.

0:00:55.050,0:00:57.770
Indicating that if name is not[br]filled out we can not create a new

0:00:57.770,0:00:59.790
restaurant row in this database.

0:00:59.790,0:01:02.360
Similarly, we'll create[br]a variable called id,

0:01:02.360,0:01:04.080
which we'll also specify as a column.

0:01:04.080,0:01:06.990
But this time we'll say it's[br]an integer instead of a string, and

0:01:06.990,0:01:08.710
set primary key to true.

0:01:08.710,0:01:11.040
Our menu items are going to have[br]a little bit more information.

0:01:11.040,0:01:13.930
Just like each restaurant,[br]each menu item needs to have a name.

0:01:13.930,0:01:15.830
We'll set nullable equal to false again,

0:01:15.830,0:01:18.910
to make sure that no one can[br]create a menu item without a name.

0:01:18.910,0:01:22.630
We'll create an id for each menu item[br]which is set to the primary key.

0:01:22.630,0:01:24.470
We'll create course, description and

0:01:24.470,0:01:27.480
price variables and[br]specify them all as strings.

0:01:27.480,0:01:30.580
I'm now going to create a variable[br]called restaurant_ID and

0:01:30.580,0:01:32.830
specify this as a foreign key integer.

0:01:32.830,0:01:35.580
This will create the foreign key[br]relationship between my menu item

0:01:35.580,0:01:37.410
class and my restaurant class.

0:01:37.410,0:01:40.820
Inside the foreign key I[br]specify restaurant.id.

0:01:40.820,0:01:43.280
This will say look inside[br]the restaurant table and

0:01:43.280,0:01:47.300
retrieve the ID number whenever[br]I ask for restaurant_id.

0:01:47.300,0:01:50.570
In this last line I'm creating[br]a variable called lowercase restaurant

0:01:50.570,0:01:53.530
which I'm saying is the relationship[br]between my class restaurant.
