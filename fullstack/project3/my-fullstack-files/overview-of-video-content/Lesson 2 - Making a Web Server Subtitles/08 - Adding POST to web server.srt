0:00:00.300,0:00:02.750
So now that I have a good[br]understanding of do_GET,

0:00:02.750,0:00:06.460
let's take this web server to the next[br]level with some post functionality.

0:00:06.460,0:00:09.600
Gets are good for viewing information[br]all ready on the server, but

0:00:09.600,0:00:12.120
posts are what allow the user to[br]customize their web experience.

0:00:13.160,0:00:16.630
Get requests happen simply by[br]visiting the URL in a browser, but

0:00:16.630,0:00:20.910
post requests from a browser require[br]data to be submitted, like with a form.

0:00:20.910,0:00:24.505
I'm going to add a post method such that[br]our server doesn't just say hello or

0:00:24.505,0:00:27.125
hola, but whatever the user[br]prompts as a salutation.

0:00:27.125,0:00:28.810
On the same level as my do_GET method,

0:00:28.810,0:00:32.180
I will create another method called[br]do_POST, which overrides the method in

0:00:32.180,0:00:36.205
the base http request handler[br]superclass, just like doGet.

0:00:36.205,0:00:39.715
I'll make another try except block,[br]similar to my do_GET method.

0:00:39.715,0:00:41.245
When I receive a post request,

0:00:41.245,0:00:44.655
I'll send off the response code[br]that indicates a successful post.

0:00:44.655,0:00:48.015
Next, I need to decipher the message[br]that was sent from the server.

0:00:48.015,0:00:51.305
In order to do this, I'm going to[br]use some message from the CGI,

0:00:51.305,0:00:54.100
or common gateway interface,[br]library in Python.

0:00:54.100,0:00:57.010
So I'll add import cgi[br]to the top of my file.

0:00:57.010,0:00:59.920
Let's take a look at the following[br]chunk of code I'm going to add.

0:00:59.920,0:01:05.120
This cgi.parse_header function parses an[br]HTML form header, such as content type,

0:01:05.120,0:01:07.790
into a main value and[br]dictionary of parameters.

0:01:07.790,0:01:11.020
After that, we check and[br]see if this is form data being received.

0:01:11.020,0:01:12.740
I then make a variable called fields,

0:01:12.740,0:01:16.980
which we use the cgi.parse_multipart[br]to collect all of the fields in a form.

0:01:16.980,0:01:20.130
Then I will make a variable called[br]messagecontent to get out the value of

0:01:20.130,0:01:22.830
a specific field or set of fields and[br]store them in an array.

0:01:22.830,0:01:27.570
I will call this field message here,[br]and when I create my HTML form.

0:01:27.570,0:01:29.540
So now that I've[br]received a post request,

0:01:29.540,0:01:32.200
I can decide what to tell the client[br]with the new information I've received.

0:01:32.200,0:01:35.260
I will create an empty string[br]named output again and

0:01:35.260,0:01:37.540
then add some opening HTML tags to it.

0:01:37.540,0:01:41.130
I'll have my server respond with,[br]okay, how about this.

0:01:41.130,0:01:43.540
And then return the first value of[br]the array that was created when I

0:01:43.540,0:01:44.310
submitted the form.

0:01:45.430,0:01:46.040
Hm?

0:01:46.040,0:01:50.270
Well you might be thinking, hey, you[br]haven't even created an HTML form, but

0:01:50.270,0:01:52.240
keep talking about it[br]in the post handler.

0:01:52.240,0:01:53.170
And you'd be right.

0:01:53.170,0:01:54.840
So I'll go ahead and do that now.

0:01:54.840,0:01:58.740
In this line of HTML code, I'm adding a[br]post request along with the header tag,

0:01:58.740,0:02:00.970
to prompt the user to input some data.

0:02:00.970,0:02:04.840
Here, I wrote the name of my input[br]field as message, to coincide with

0:02:04.840,0:02:08.539
the message field I'm extracting[br]data from in the post request.

0:02:08.539,0:02:11.845
I'm going to copy this line of code and[br]paste it into my hello and

0:02:11.845,0:02:15.690
hola get requests, so this form will[br]be present on their pages as well.

0:02:15.690,0:02:17.840
I will also separate out my opening and

0:02:17.840,0:02:20.960
closing HTML tags on[br]their own line of code.

0:02:20.960,0:02:24.930
Let me not forget to close the body and[br]html tags in my post handler.

0:02:24.930,0:02:28.720
Send the output out to the server and[br]print out the output for debugging.

0:02:28.720,0:02:31.780
In my exception block,[br]I will just leave it as pass for now.

0:02:31.780,0:02:34.120
Let's see these new changes in[br]action from the web browser.
