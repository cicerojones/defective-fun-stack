0:00:00.160,0:00:00.660
Okay.

0:00:00.660,0:00:02.640
So now let's tackle[br]objective three together.

0:00:02.640,0:00:04.600
This objective really has three parts.

0:00:04.600,0:00:07.310
First we need to create a link[br]to make a new restaurant.

0:00:07.310,0:00:10.860
Then create a page to handle the get[br]request when we click on that link.

0:00:10.860,0:00:14.830
And finally, a get post method to[br]persist the data to the database.

0:00:14.830,0:00:17.210
Well the first part[br]doesn't seem too hard.

0:00:17.210,0:00:20.500
Let's add another anchor tag to our[br]restaurants page that prompts the user

0:00:20.500,0:00:23.330
to create a new restaurant,[br]followed by a few break lines.

0:00:23.330,0:00:24.080
We can go ahead and

0:00:24.080,0:00:28.900
fill out this href to /restaurants/new[br]as stated in the objective.

0:00:28.900,0:00:32.340
Next, I will create another page to[br]handle this new restaurant request.

0:00:32.340,0:00:35.950
Inside my do_GET block, I will add[br]another if statement that looks for

0:00:35.950,0:00:38.820
the /restaurants/new URL.

0:00:38.820,0:00:39.980
Looking at this code,

0:00:39.980,0:00:43.660
we can see a lot of similarities with[br]our previous do_GET if statements.

0:00:43.660,0:00:47.580
I have added here a field where the user[br]can input the name of a new restaurant.

0:00:47.580,0:00:48.980
So now that the layout is in place,

0:00:48.980,0:00:51.580
the magic really happens[br]with our post request.

0:00:51.580,0:00:54.490
Unlike get requests,[br]post requests cannot be executed by

0:00:54.490,0:00:57.250
simply typing a URL in the browser and[br]hitting enter.

0:00:57.250,0:01:01.840
However, do_POST is going to look for[br]the /restaurants /newpath,

0:01:01.840,0:01:04.586
passed along from my forum,[br]in order to know what action to perform.

0:01:04.586,0:01:06.470
Inside my do_POST,

0:01:06.470,0:01:09.890
I will comment out the previous[br]code inside the try block for now.

0:01:09.890,0:01:13.860
I then add an if statement,[br]looking for /restaurants/new.

0:01:13.860,0:01:17.290
Then I extract the information from[br]the form similarly to the way I

0:01:17.290,0:01:19.370
did it in the first web server we wrote.

0:01:19.370,0:01:22.340
But this time I incorporate that[br]data into my declaration of

0:01:22.340,0:01:23.760
a new restaurant class.

0:01:23.760,0:01:24.950
Also differently now,

0:01:24.950,0:01:28.130
instead of printing my results to[br]the current webpage, I create a redirect

0:01:28.130,0:01:31.460
here that will take me back to my[br]original restaurant's homepage.

0:01:31.460,0:01:33.610
Let's save and restart our server again.

0:01:33.610,0:01:35.340
If we can create a new restaurant, and

0:01:35.340,0:01:38.650
see it added to our page,[br]objective three is over and out.

0:01:38.650,0:01:41.580
The source code for objective three[br]is available in the instructor notes.
