* CRUD Review--file taken from Udacity Course materials
** Operations with SQLAlchemy

In this lesson, we performed all of our CRUD operations with
SQLAlchemy on an SQLite database. Before we perform any operations, we
must first import the necessary libraries, connect to our
restaurantMenu.db, and create a session to interface with the
database:



#+BEGIN_SRC python
from sqlalchemy import create_engine
from sqlalchemy.orm import sessionmaker
from database_setup import Base, Restaurant, MenuItem


engine = create_engine('sqlite:///restaurantMenu.db')
Base.metadata.bind=engine
DBSession = sessionmaker(bind = engine)
session = DBSession()
#+END_SRC
** CREATE

We created a new Restaurant and called it Pizza Palace:
#+BEGIN_SRC python
myFirstRestaurant = Restaurant(name = "Pizza Palace")
session.add(myFirstRestaurant)
sesssion.commit()
#+END_SRC


We created a cheese pizza menu item and added it to the Pizza Palace
Menu:

#+BEGIN_SRC python
cheesepizza = menuItem(name="Cheese Pizza", description = "Made with all natural ingredients and fresh mozzarella", course="Entree", price="$8.99", restaurant=myFirstRestaurant)
session.add(cheesepizza)
session.commit()
#+END_SRC
** READ

We read out information in our database using the query method in SQLAlchemy:


#+BEGIN_SRC python
firstResult = session.query(Restaurant).first()
firstResult.name

items = session.query(MenuItem).all()
for item in items:
    print item.name
#+END_SRC

** UPDATE
In order to update and existing entry in our database, we must execute the following commands:

Find Entry
Reset value(s)
Add to session
Execute session.commit()

We found the veggie burger that belonged to the Urban Burger
restaurant by executing the following query:


#+BEGIN_SRC python
veggieBurgers = session.query(MenuItem).filter_by(name= 'Veggie Burger')
for veggieBurger in veggieBurgers:
    print veggieBurger.id
    print veggieBurger.price
    print veggieBurger.restaurant.name
    print "\n"
#+END_SRC

Then we updated the price of the veggie burger to $2.99:

#+BEGIN_SRC python
UrbanVeggieBurger = session.query(MenuItem).filter_by(id=8).one()
UrbanVeggieBurger.price = '$2.99'
session.add(UrbanVeggieBurger)
session.commit() 
#+END_SRC

** DELETE
To delete an item from our database we must follow the following steps:

Find the entry

#+BEGIN_SRC python
Session.delete(Entry)
Session.commit()
#+END_SRC
We deleted spinach Ice Cream from our Menu Items database with the following operations:


#+BEGIN_SRC python
spinach = session.query(MenuItem).filter_by(name = 'Spinach Ice Cream').one()
session.delete(spinach)
session.commit() 
#+END_SRC


